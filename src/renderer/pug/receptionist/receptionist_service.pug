extends ../templates/head.pug

block title
  title Add Service

append link
  link(rel="stylesheet" href="../../css/admin/admin_add.css")
  link(rel="stylesheet" href="../../css/receptionist/receptionist_service.css")
  link(rel="stylesheet" href="../../css/toast.css")

block fa-link
  link(rel="stylesheet" href="../../css/all.min.css")


block content

  i(class="fa fa-times-circle close")

  section(class="admin-add-user")

    form(class="admin-add-user-form" enctype="multipart/form-data")

      p.op Add Service

      label
        p Service Name
        input(type="text" name="serviceName" required)

      label
        p Department
        select(name="department" required)
          option(value="Select Department" selected hidden) Select Department

      label
        p Rate
        input(type="number" min=0  value=0 step=0.1 name="rate" required)

      button(type="submit") Save
      button(type="reset" class="reset") Reset

  script.
    ; ( async () => {

      document.forms[0].addEventListener("submit", evt => evt.preventDefault());

      const { LOGIN_URL } = require("../../js/constants.js");
      const { ReceptionRequest , instance } = require("../../js/receptionist/receptionistRequest.js");

      const result = await instance.adminLoadUser({ url: "department" , collection: "departments" , nextUrl: LOGIN_URL });

      if ( result.departments.length === 0 ) return;

      const select = document.querySelector("[name=department]");

      result.departments.forEach( x => {
        const option = document.createElement("option");
        option.textContent = option.value = x.name;
        select.appendChild(option);
      });

      ReceptionRequest.EditNonUsers(instance);

    })();